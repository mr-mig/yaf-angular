{"version":3,"sources":["../../../src/composite/create.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;AACb,IAAI,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC;AACtC,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,IAAI,QAAQ,GAAG,OAAO,CAAC,uCAAuC,CAAC,CAAC;AAChE,IAAI,cAAc,GAAG,OAAO,CAAC,6CAA6C,CAAC,CAAC;AAC5E,IAAI,gBAAgB,GAAG,OAAO,CAAC,4BAA4B,CAAC,CAAC;AAC7D,IAAI,aAAa,GAAG,OAAO,CAAC,iCAAiC,CAAC,CAAC;AAC/D,IAAI,iBAAiB,GAAG,OAAO,CAAC,oCAAoC,CAAC,CAAC;AACtE,IAAI,YAAY,GAAG,OAAO,CAAC,wBAAwB,CAAC,CAAC;AACrD,IAAI,YAAY,GAAG,OAAO,CAAC,wBAAwB,CAAC,CAAC;AACrD,IAAI,aAAa,GAAG,OAAO,CAAC,4CAA4C,CAAC,CAAC;AAC1E,IAAI,aAAa,GAAG,OAAO,CAAC,4CAA4C,CAAC,CAAC;;AAG1E,MAAM,CAAC,OAAO,GAAG,SAAS,yBAAyB,CAAC,UAAU,EAAE,KAAK,EAAE;;AAErE,WAAS,gBAAgB,CAAC,cAAc,EAAE,QAAQ,EAAE,MAAM,EAAE;;;AAG1D,QAAI,sBAAsB,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;;;AAGtE,QAAI,qBAAqB,GAAG;AAC1B,WAAK,EAAE,GAAG;AACV,aAAO,EAAE,GAAG;KACb,CAAC;;AAEF,WAAO;AACL,cAAQ,EAAE,GAAG;AACb,cAAQ,EAAE,UAAU,CAAC,QAAQ;AAC7B,aAAO,EAAE,iBAAU,GAAG,EAAE,KAAK,EAAE;AAC7B,YAAI,CAAC,KAAK,CAAC,KAAK,EAAE;AAChB,iBAAO,CAAC,GAAG,CAAC,+DAAgE,GAC1E,UAAU,CAAC,IAAI,GAAG,YAAa,CAAC,CAAC;SACpC;;AAED,eAAO;AACL,aAAG,EAAE,aAAU,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE;AAC/B,gBAAI,CAAC,KAAK,CAAC,KAAK,EAAE;AAChB,mBAAK,CAAC,KAAK,GAAG,IAAI,cAAc,EAAE,CAAC;aACpC;;AAED,gBAAI,MAAM,CAAC;AACX,gBAAI,UAAU,CAAC,MAAM,EAAE;AACrB,oBAAM,GAAG,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;aAC1C;;AAED,gBAAI,KAAK,CAAC,OAAO,EAAE;AACjB,kBAAI,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC5C,0BAAY,CAAC,OAAO,CAAC,UAAU,OAAO,EAAE;AACtC,wBAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;eACpD,CAAC,CAAC;aACJ;;AAED,gBAAI,UAAU,CAAC,MAAM,EAAE;AACrB,mBAAK,CAAC,GAAG,CAAC,UAAU,EAAE,YAAY;;AAEhC,4BAAY,CAAC,MAAM,CAAC,CAAC;eACtB,CAAC,CAAC;aACJ;;;AAGD,gBAAI,IAAI,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;;AAEnC,gBAAI,YAAY,GAAG,MAAM,CACvB,QAAQ,CAAC,EAAE,EAAE,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,EAC/B,aAAa,CAAC,KAAK,CAAC,EACpB,aAAa,CAAC,sBAAsB,EAAE,UAAU,CAAC,WAAW,CAAC,EAC7D,cAAc,CAAC,MAAM,EAAE,QAAQ,CAAC,CACjC,CAAC;;AAEF,sBAAU,CAAC,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;WACtC;AACD,cAAI,EAAE,gBAAY,EACjB;SACF,CAAC;OACH;AACD,WAAK,EAAE,qBAAqB;KAC7B,CAAC;GACH;;AAED,MAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;;;AAGlD,kBAAgB,CAAC,OAAO,GACtB,CAAE,SAAS,EACT,iBAAiB,EAAE,CAAC,UAAU,EAC9B,aAAa,EAAE,CAAC,UAAU,CAC3B,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;;AAEnC,YAAU,CAAC,SAAS,GAAG,gBAAgB,CAAC;AACxC,SAAO,UAAU,CAAC;CACnB,CAAC","file":"src/composite/create.js","sourcesContent":["'use strict';\nvar conv = require('yaf').conventions;\nvar extend = require('extend');\nvar tagReady = require('yaf/interfaces/common/tagReadyContext');\nvar compositeReady = require('yaf/interfaces/common/compositeReadyContext');\nvar getOptionsValues = require('yaf/utils/getOptionsValues');\nvar linkInterface = require('yaf/interfaces/behavioural/link');\nvar channelsInterface = require('yaf/interfaces/behavioural/channel');\nvar attachStyles = require('yaf/utils/attachStyles');\nvar detachStyles = require('yaf/utils/detachStyles');\nvar injectorReady = require('yaf/interfaces/common/injectorReadyContext');\nvar templateReady = require('yaf/interfaces/common/templateReadyContext');\n\n\nmodule.exports = function compositeDirectiveFactory(definition, state) {\n\n  function directiveFactory(CompositeState, channels, linkFn) {\n\n    // get all injected services\n    var injectedCustomServices = Array.prototype.slice.call(arguments, 3);\n\n    // todo mix options in?\n    var angularDirectiveScope = {\n      state: '=',\n      channel: '@'\n    };\n\n    return {\n      restrict: 'E',\n      template: definition.template,\n      compile: function (tEl, tAttr) {\n        if (!tAttr.state) {\n          console.log('Warning! It seems you forgot to specify state attribute for \\'' +\n            definition.name + '\\' element!');\n        }\n\n        return {\n          pre: function (scope, el, attrs) {\n            if (!scope.state) {\n              scope.state = new CompositeState();\n            }\n\n            var styles;\n            if (definition.styles) {\n              styles = attachStyles(definition.styles);\n            }\n\n            if (scope.channel) {\n              var channelNames = scope.channel.split(' ');\n              channelNames.forEach(function (channel) {\n                channels.get(channel).linkWith(scope, scope.state);\n              });\n            }\n\n            if (definition.styles) {\n              scope.$on('$destroy', function () {\n                // todo potential mem leak here?\n                detachStyles(styles);\n              });\n            }\n\n            // collect the interpolated option values from attrs\n            var opts = getOptionsValues(attrs);\n\n            var readyContext = extend(\n              tagReady(el, scope.state, opts),\n              templateReady(scope),\n              injectorReady(injectedCustomServices, definition.injectables),\n              compositeReady(linkFn, channels)\n            );\n\n            definition.ready.apply(readyContext);\n          },\n          post: function () {\n          }\n        };\n      },\n      scope: angularDirectiveScope\n    };\n  }\n\n  var stateName = conv.names.state(definition.name);\n\n  // inject all composite-specific services\n  directiveFactory.$inject =\n    [ stateName,\n      channelsInterface().entityName,\n      linkInterface().entityName\n    ].concat(definition.injectables);\n\n  definition.component = directiveFactory;\n  return definition;\n};"]}