{"version":3,"sources":["../../../src/screen/create.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;AACb,IAAI,OAAO,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACrC,IAAI,QAAQ,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC;AACnD,IAAI,cAAc,GAAG,OAAO,CAAC,6CAA6C,CAAC,CAAC;AAC5E,IAAI,aAAa,GAAG,OAAO,CAAC,iCAAiC,CAAC,CAAC;AAC/D,IAAI,iBAAiB,GAAG,OAAO,CAAC,oCAAoC,CAAC,CAAC;AACtE,IAAI,aAAa,GAAG,OAAO,CAAC,4CAA4C,CAAC,CAAC;AAC1E,IAAI,aAAa,GAAG,OAAO,CAAC,4CAA4C,CAAC,CAAC;AAC1E,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAE/B,MAAM,CAAC,OAAO,GAAG,SAAS,YAAY,CAAC,UAAU,EAAE;AACjD,MAAI,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,kBAAkB,CAAC,CAAC;;AAElF,MAAI,cAAc,GAAG,wBAAU,cAAc,EAAE,gBAAgB,EAAE;AAC/D,kBAAc,CACX,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE;AACtB,cAAQ,EAAE,UAAU,CAAC,QAAQ;AAC7B,gBAAU,EAAE,UAAU;KACvB,CAAC,CAAC;;AAEL,oBAAgB,CAAC,cAAc,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;GACtD,CAAC;;AAEF,MAAI,UAAU,GAAG,oBAAU,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;AACjD,QAAI,sBAAsB,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;;AAEtE,QAAI,MAAM,CAAC;AACX,QAAI,UAAU,CAAC,MAAM,EAAE;AACrB,YAAM,GAAG,QAAQ,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC;KACpE;;AAED,UAAM,CAAC,GAAG,CAAC,UAAU,EAAE,YAAY;AACjC,cAAQ,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;KAChD,CAAC,CAAC;;AAEH,QAAI,YAAY,GAAG,MAAM,CACvB,aAAa,CAAC,MAAM,CAAC,EACrB,aAAa,CAAC,sBAAsB,EAAE,UAAU,CAAC,WAAW,CAAC,EAC7D,cAAc,CAAC,IAAI,EAAE,QAAQ,CAAC,CAC/B,CAAC;;AAEF,cAAU,CAAC,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;GACtC,CAAC;;AAEF,YAAU,CAAC,OAAO,GAAG,CACnB,QAAQ,EACR,iBAAiB,EAAE,CAAC,UAAU,EAC9B,aAAa,EAAE,CAAC,UAAU,CAC3B,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;;AAEjC,gBAAc,CAAC,OAAO,GAAG,CAAC,gBAAgB,EAAE,kBAAkB,CAAC,CAAC;;AAEhE,SAAO,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;CACtC,CAAC","file":"src/screen/create.js","sourcesContent":["'use strict';\nvar angular = require('angular-cjs');\nvar styleRef = require('yaf/utils/refCountStyles');\nvar compositeReady = require('yaf/interfaces/common/compositeReadyContext');\nvar linkInterface = require('yaf/interfaces/behavioural/link');\nvar channelsInterface = require('yaf/interfaces/behavioural/channel');\nvar injectorReady = require('yaf/interfaces/common/injectorReadyContext');\nvar templateReady = require('yaf/interfaces/common/templateReadyContext');\nvar extend = require('extend');\n\nmodule.exports = function createScreen(definition) {\n  var module = angular.module(definition.moduleName, definition.moduleDependencies);\n\n  var registerRoutes = function ($routeProvider, channelsProvider) {\n    $routeProvider\n      .when(definition.route, {\n        template: definition.template,\n        controller: controller\n      });\n\n    channelsProvider.createChannels(definition.channels);\n  };\n\n  var controller = function ($scope, channels, link) {\n    var injectedCustomServices = Array.prototype.slice.call(arguments, 3);\n\n    var styles;\n    if (definition.styles) {\n      styles = styleRef.attachStyles(definition.name, definition.styles);\n    }\n\n    $scope.$on('$destroy', function () {\n      styleRef.detachStyles(definition.name, styles);\n    });\n\n    var readyContext = extend(\n      templateReady($scope),\n      injectorReady(injectedCustomServices, definition.injectables),\n      compositeReady(link, channels)\n    );\n\n    definition.ready.apply(readyContext);\n  };\n\n  controller.$inject = [\n    '$scope',\n    channelsInterface().entityName,\n    linkInterface().entityName\n  ].concat(definition.injectables);\n\n  registerRoutes.$inject = ['$routeProvider', 'channelsProvider'];\n\n  return module.config(registerRoutes);\n};\n"]}