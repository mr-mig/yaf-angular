{"version":3,"sources":["../../../src/link/create.js"],"names":[],"mappings":"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","file":"src/link/create.js","sourcesContent":["'use strict';\nmodule.exports = link;\n\nfunction link(scope) {\n  return new LinkBus(scope);\n}\n\nfunction LinkBus(scope) {\n  // the current linked scope\n  this.scope = scope;\n  // all source states\n  this.sources = [];\n  // all target states\n  this.targets = [];\n  // current transformer\n  this.transformer = function (nothing, x) {\n    return x;\n  };\n\n  this.scope.$on('$destroy', function () {\n    // kill all references bounded to this scope object\n    // in angular all listeners will be removed automatically\n    this.sources = null;\n    this.targets = null;\n    this.scope = null;\n    this.transformer = null;\n  }.bind(this));\n}\n\n// add a state as a change source\nLinkBus.prototype.source = function (state, field, deep) {\n  //1. state is always deep-watched\n  //2. state + field is not deepwatched by default\n  //3. state + arrayField is not deepwatched, but watchCollection is used + field is shallow watched\n  //4. state + arrayField + deep is deepwatched\n\n\n  var forceDeep = !field || deep;\n  var lengthyField = field && Array.isArray(state[field]);\n  var watchCollection = field && lengthyField && !forceDeep;\n  var watchReference = field && lengthyField;\n\n  // get hold of all registered states\n  this.sources.push({\n    state: state,\n    field: field\n  });\n\n  if (field && typeof state[field] === 'function') {\n    return this.fromFn(state, field);\n  }\n\n  var watched = function () {\n    return state[field];\n  };\n\n  if (!field) {\n    watched = function () {\n      return state;\n    };\n  }\n\n  var watchHandler = function (n, o) {\n    if (n !== o) {\n      console.log('value changed', {\n        forceDeep: forceDeep,\n        lengthy: lengthyField,\n        collection: watchCollection,\n        reference: watchReference,\n        n: n,\n        o: o\n      });\n\n      this._dispatch({\n        state: state,\n        field: field,\n        value: n});\n    }\n  }.bind(this);\n\n  var watcherFn = watchCollection ?\n    this.scope.$watchCollection.bind(this.scope) :\n    this.scope.$watch.bind(this.scope);\n\n  var deregisterEntityWatcher = watcherFn(watched, watchHandler, forceDeep);\n\n//  if (watchReference) {\n//    var referenceWatcher = function () {\n//      return state;\n//    };\n//\n//    this.scope.$watch(referenceWatcher, function (n, o) {\n//      if (n !== o) {\n//        console.log('reference watcher', n, o);\n//        // remove old watcher\n//        deregisterEntityWatcher();\n//\n//        // create a new watcher for fresh value\n//        deregisterEntityWatcher = watcherFn(function () {\n//          return n;\n//        }, watchHandler, forceDeep);\n//      }\n//    });\n//\n//  }\n\n  return this;\n};\n\n\n// dispatch change to all targets\nLinkBus.prototype._dispatch = function (newVal) {\n  if (!this.targets.length) {\n    console.log('The change event inside one of the links ' +\n      'has no targets!\\nSources: ' + this.sources);\n  }\n  this.targets.forEach(_applyTransformation(newVal, this.transformer));\n};\n\n\n// add a state as a change target\nLinkBus.prototype.target = function (state, field) {\n  if (!state) {\n    throw new Error('You specified an \"undefined\" state to link!');\n  }\n  this.targets.push({\n    state: state,\n    field: field\n  });\n  return this;\n};\n\n// add a transformer function to current link\n// should be of type (source, target) -> target\nLinkBus.prototype.map = function (fn) {\n  this.transformer = fn;\n  return this;\n};\n\n// link function call as a change source\nLinkBus.prototype.fromFn = function (state, fnName) {\n  // remember old function\n  var oldFn = state[fnName];\n\n  // hijack with decorator\n  state[fnName] = function () {\n    var args = [].slice.apply(arguments);\n\n    var result = oldFn.apply(state, args);\n\n    // dispatch change when this method is called\n    this._dispatch(result);\n  }.bind(this);\n\n  return this;\n};\n\n// propagate transformation to the given target\nfunction _applyTransformation(newVal, transformer) {\n  return function (target) {\n    var changedValue = target.field ? target.state[target.field] : target.state;\n    var newTargetValue = transformer(newVal.value, changedValue);\n\n    if (newTargetValue === undefined && !target.field) {\n      console.log('Warning! The link reset the target state to \"undefined\"!' +\n        '\\nFeels like a bug.' +\n        '\\nYou should use a pure function inside link.map().' +\n        '\\nThis function should return transformed state object:' +\n        '\\n' + transformer);\n    }\n\n    if (target.field) {\n      target.state[target.field] = newTargetValue;\n    } else {\n      // update all fields of the old target\n      // Pretending that it acts as an immutable\n      Object.keys(target.state).forEach(function (key) {\n        target.state[key] = newTargetValue[key];\n      });\n    }\n  };\n}\n"]}